@{
    ViewData["Title"] = "Home Page";
}

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
   
    <script type="text/javascript">

        $(document).ready(() => {

            var connection = new signalR.HubConnectionBuilder().withAutomaticReconnect([1000, 1000, 3000, 3000]).withUrl("https://localhost:5001/AppHub").build();

            statusShow();
            Start();
            function statusShow() {
                $("#conStatus").text(connection.connectionState);
            }



            function Start() {
                connection.start().then(() => {
                    statusShow();
                    $("#loading").hide();

                    connection.invoke("GetNames")
                    connection.invoke("GetNamesByGroup");

                }).catch((err) => {
                    console.log(err);
                    setTimeout(() => Start(),2000)
                });
            }

            statusShow();
        
            connection.on("Error", (err) => {
                alert(err);
            })

            connection.on("ReceiveNames", (names) => {
                $("#namesList").empty();

                names.forEach((item, index) => {
                    $("#namesList").append(`<li class="list-group-item">${item} </li>`)
                })
            } )

            connection.onreconnecting(err => {
                $("#loading").show();
                statusShow();
                console.log("onreconnection:" + err);
            });

            connection.onreconnected(connectionId => {
                $("#loading").hide();
                statusShow();
                console.log("onreconnected with :" + connectionId);
            })

            connection.onclose(() => {
                $("#loading").hide();
                statusShow();
                Start();

            })

            connection.on("ReceiveClientCount", (clientCount) => {

                $("#clientCount").text(clientCount);
            })

            connection.on("Notify", (countText) => {
                $("#notify").html(`<div class="alert alert-success"> ${countText}</div>`)
            })

            connection.on("ReceiveName", (name) => {
                $("#namesList").append(`<li class="list-group-item"> ${name} </li>`)
            })

            connection.on("ReceiveMessageByGroup", (name, teamId) => {

                let listName;

                if (teamId == 1) {
                    listName = "ATeamList";
                }
                else {
                    listName = "BTeamList";
                }

                $(`#${listName}`).append(`<li class="list-group-item"> ${name}</li>`)
            })

            connection.on("ReceiveNamesByGroup", (teams) => {

                teams.forEach((team, index) => {

                    let listName;

                    if (team.teamId == 1) {
                        listName = "ATeamList";
                    }
                    else {
                        listName = "BTeamList";
                    }

                    team.users.forEach((user, ind) => {
                        $(`#${listName}`).append(`<li class="list-group-item"> ${user.name}</li>`)
                    })



                })
            })

            connection.on("ReceiveProduct", (product) => { console.log(product) })



            $("#btnProduct").click(() => {
                let product = { "Id": 1, "Name": "Pen", "Price": 100, "Stock": 200 };

                connection.invoke("SendProduct", product);
            })

            $("#btnNameSave").click(() => {
                connection.invoke("SendName", $("#txtName").val()).catch((err) => console.log(err))
            })

            $("#btnNameTeam").click(() => {
                let name = $("#txtName").val();

                let teamName = $("input[type=radio]:checked").val();
                if (teamName==null) {
                    alert("Takım seçiniz")
                    return;
                }
                connection.invoke("SendNameByGroup", name, teamName).catch((err) => { console.log(err); })
            })

            $("input[type=radio]").change(() => {
                let value = $(`input[type=radio]:checked`).val();

                if (value == "Team A") {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team B");
                }
                else {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team A");  
                }
            })
             

        })
       

    </script>
}
<div class="row">
    <div class="col-md-8 offset-2">
        <input class="form-control" type="text" id="txtName" />
        <hr />
        <button class="btn btn-primary" id="btnNameSave">Record Name  </button>
        <button class="btn btn-warning" id="btnNameTeam">Record Name as Team  </button>
        <button class="btn btn-danger" id="btnProduct"> Send Product</button>
        <div class="alert alert-info mt-2">
            <div class="float-left">
                Connection State: <strong id="conStatus"></strong><br />
                Client Count: <strong id="clientCount">  </strong>
            </div>
            <div class="float-right">
                <div id="loading" class="spinner-border" role="status">
                    <span class="sr-only">Loading</span>
                </div>
            </div>
            <div class="clearfix">   </div>
        </div>
        <div id="notify"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup"  value="Team A"/>
            <label class="form-check-label">A Team </label>
        </div>  
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup"  value="Team B"/>
            <label class="form-check-label">B Team </label>
        </div>
    </div>
    <div class="col-md-8 offset-2">
        <div class="row">
            <div class="col-md-6">
                <ul class="list-group" id="ATeamList"></ul>
            </div>
            <div class="col-md-6">
                <ul class="list-group" id="BTeamList"></ul>
            </div>
        </div>
    </div>
</div>
